For any software product , two group of engineer will work
1. Development group
2. Operation group/ non development group /Administrations group


Again this classification can be divided into small set of group

The people who are involving in 
1.Planning 
2.coding 
3.Build
4.Testing

Development group - which person are required to developed the product.

Business Analyst(BA)
System analyst(SA)
Design Architect(DA)
Developer/coder
Build engineer
Test Engineer (QA)

These area people are consider as development group


2. Operation group

The people who are involving in 
1. Release
2. Deployment
3. Operation(n/w eng)
4. Monitoring 

are considered as operations group
example :
1. Configuration
2. Release engineer
3. System admin
4. Database engineer
5. Network Engineer


1. Version control system tool :

Version control system is also known as software configuration  management (SCM) or
Source code management(SCM)

Need of version control system?

Assume :QA Engineer  -- Write code --Files 

Client - HSBC 
Requirement - Developed one module/project

Client project
   | - Suppose 100 java files are there  (diagram 1)
   | - Client suggest some changes 
   | - I changed some files from source code to meet client requirement.
   | - I gave the demo and client suggested some more changes.
   | - I gave the third time demo and client suggested some more changes.
   
   
 We should not override the code
 Every version we have to maintain  - one Qa maintain all the folders it's easy
 20 QA are there how they are maintain all the codes/files
 
1. Maintaining Multiple version manually  is very complex activity.
 
 2. Every changes should-be tracked
    Who did changes 
	When did the changes
	Which changes he did etc.
	
 3.Overwriting  of the code  should not be  happened.
 
 4.Developer have to share their code to peer developer, so that multiple developer will work in 
   Collaborative way.   ( diagram 3)
   
 5.Parallel Development must be required
 
 
 These are the need 
 Multiple version we required to maintain each and every changed should b tracked and should be stored.
 
 
 ================================================================
 
 How version control system work
 
 Version control system always talks about files  which contain source code 
 
 
 1. Basic version control system terminology
 
 1. Working directory :
 Where QA /Dev are required to create /modify files
 where version control is not applicable, here we won't use the work like verison -1, version 2 etc
 
 
 Repository :Where we have to store files and metadata(Exta file)
 Here version control is applicable .
 Here we can talk version like v1 ,v2 ,v3
 
 Commit : The process of dending files from working directory to the repository
 
 Checkout : The process of sending files from repository to working director.
 
===========================================================

Beenifits of  version control system

1. We can maintain different version and we can choose any version  based on client requirement.
2. With every version /commit  we can  mainatain metadata like
          Who Commit message 
		  Who did chages 
	      When did the chages
	      Which chages he did etc.
3. QA eng can share the code to the peer QA in very  easy way.
4. Multiple QA can work  in collaborative way.
5. Parallel development.
6. We can privide access control like 
        who can  read code
		who can modify code.

================================================================================
(Diagram 6)


Git command :

Git add    - sending files from working directory to the staging area
Git commit - Stages changes will be moved to the local repository
Git Checkout - These opetion is perform locally  b/w  working  directory  and repository.(To perofmr this opertion n/wis not required)
Git push   - The process of sending files from the local repository to the remote repository
Git clone  - To create a new local repository from the remote repository.
git pull   - The process of geeting the updated files from remote repository to local repository.

============================================================================

Remote repository server
Github
Gitlab
BitBucket
cloud perform

=================================================================================

Git features 

1. Distributed
     . No single point of failure .every QA has a local repository
     . Performance is more /Speed more
     . Without n/w also Qa can continue his work.

2. Staging area
    . Steps process
    . First we need to add files to the staging area and then we have to commit from the staging area.
      Advantage of staging area is we can cross check or double check our changes  before commit.if everything is fine
       then we can commit.    (duagram 6)

3. Branching and merging
4. Open source
5. It provided support for multiple platforms


===============================================================
Git Architecture

1.Staging area
2.commit
3.checkout
4.Push
5.Pull
6.remote repository
7.local repository

All these word we are using in git architecture

Git has 2 types repository
1. Local Repository
2. Remote Repository

Usually the totla project code will be available in remote repository the current work of Qa will
be stored in local repository.

New file created in working directory
Once work completed, we have to add these files to staging area for these we have to use git add command

Git add    - sending files from working directory to the staging area
Git commit - Stages changes will be moved to the local repository
Git Checkout -These opetion is perform locally  b/w  working  directory  and repository.(To perofmr this opertion n/wis not required)
Git push   - The process of sending files from the local repository to the remote repository
Git clone  - To create a new local repository from the remote repository.
git pull   - The process of geeting the updated files from remote repository to local repository.



===========================================
Life cycle of file in Git
1. Untracked
  Every new file will be cretaed in working directory. Git does not aware these new files.such type of files 
  are said to be in "Untracked".
  
2.stage  
The files which are added to staging area are said to be in staged state
  
3.in repository/commited
Any file  which is commited is said to be in repository state or commited state.  

4.Midified


========================================================================

1.How to install git on window

https://git-scm.com/download/win

click on 64-bit Git for Windows Setup.
it is an exe file 

What is Git  ?
Git is a version control system tool used to track changes in computer files/source code.
it's a tool to manage your code & file history  while coordinating work remotely on those files with others

======================================================================


What is Github ?  (diagram 10)
Github is a hosting service for git repository.
Git is the tool while GitHub is the service to use git.


=======================================================================

Branching % Merging
End to end process
1.
1. Create a new Project
2.Create local(git) repository
3.Add files to staging
4.Commit changes to local Repo(.git)
5.Push chages to master branch remote repo(Github)

2.
hey guys i created new project on github 
go ahed and clone it then continue woth your task

3. 
1. Clone remote repo to local repo(Working Directory)
2.Import project from git to workspace.
3.Add/modify feature/code/test cases
4.Add files to staging
5.Commit chages to local repo(git)
6. Push changes to remote repo(Github) from new branch
7. Request PR(Pull Request) For review code

4.

Review code
Case 1-  changes required then provide comments to team member.
Case 2 - Everything good, then provide approval to merge code in to master branch in github

5. Merge code with master branch




=============================
diff b/w fetch and pull

git pull - taking a code directly from remote repo to Working directory  (git fetch + merge)
git fetch - taking the code first on local repo from rmote repo(.git) and after we need to used merge command 

==========================================================
Remote Repository URL: https://github.com/Ranjeetkendre/GitDemo

UN:kendreranjeet07@gmail.com
PSW:Pwcwelcome@1234

URL:https:https://github.com/Ranjeetkendre/hello-world/tree/NewAutomationProject-->  Given by Team Lead

Pull URL:https://github.com/Ranjeetkendre/hello-world.git
-----------------------------------------------------------------------------------
1)Click + and enter the repository name and click create a repository

2)To check created repository-->Click on Symbol(Left Top)

3)To push the code on repository-->Select any perticular Repository--> Copy URL of repository(//github.com/Ranjeetkendre/12Feb_C_Morning.git)

4)Create a new project and create a package and class in it

5)Create local Repository:
right click on project--> Team--> Share project-->select checkbox-->select checkbox-->Create repository-->Finish

6)To see Git Repository:
Click search Icon and enter git repository(view) OR enter git repositories and Press ENTER

7)Commit source code from local machine to local repository
right click on project-->Team-->Add to index-->right click on project-->Team-->Commit--->add commit message(on RHS)-->commit

8.Push source code from local repository(git) to remote repository(bitbucket/github)
right click on project-->Team-->remote-->push-->Enter URL--> Enter UN & PWD-->next-->source ref(Select Master Branch)-->master-->add Specification-->finish

9)Clone repository:
Pull URL:https:https://github.com/Ranjeetkendre/Automation_19Feb.git-->Given by Team lead

10)Go to Eclipse-->Click clone a repository(Symbol)-->Enter Pull URL,UN,PSW-->Click Next-->Select Master-->Next-->Finish

11)Move Project from local repo to working directory
File-->import-->Git-->Project from git-->Existing local repo-->select project-->Finish
=====================================================================================================================

Question :

Git and Git Hub

1. What is Git? What is the difference between Git and GitHub?

Answer: Git is a version control system that lets you manage and keep track of your source code history. 
GitHub is a cloud-based hosting service that lets you manage Git repositories. 
If you have open-source projects that use Git, then GitHub is designed to help you better manage them.

What is Git  
Git is a version control system tool used to track changes in or source code.
it is a to manage your code & file history  while coordinating work remotely on those files with others

What is Github
Github is a hosting service for git repository.
Git is the tool while GitHub is the service to use git.

=====================================================================================================================
2. What is the advantage of using GitHub for Selenium?
Answer: GitHub is a cloud-based hosting service that lets you manage Git repositories;
it helps to have a backup code in case of physical failures.

GitHub supports branching, so we can have multiple versions of code.
GitHub supports project cloning, so it helps in the easy distribution of projects across multiple teams and multiple locations
GitHub supports code pull so anyone with access rights can pull code on a local machine. This can also be integrated with Jenkins.
GitHub supports code push so anyone with access rights can check in code in GitHub central repository.

=====================================================================================================================
3. How to handle git conflicts?
Answer:  Git can handle on its own most merges by using its automatic merging features. 
There arises a conflict when two separate branches have made edits to the same line in a file,
 or when a file has been deleted in one branch but edited in the other. Conflicts are most likely to happen when 
 working in a team environment.

Identify the files that have caused the conflict.
Make the necessary changes in the files so that conflict does not arise again.
Add these files by the command git add.
Finally commit the changed file using the command git commit

=====================================================================================================================
4. Explain different Git commands?

Answer: Below are the most common git commands

1. Initialize a repo
Create an empty git repo or re-initialize an existing one
$ git init [repository path]

2. git remote add [variable name] [Remote Server Link] 
This command is used to connect your local repository to the remote server.

3. git clone

This command is used to obtain a repository from an existing URL.
git clone [url] 
Example: navigate to your repo path where you want to clone and write the below command in cmd
git clone https://github.com/hverma22/Test2

4. git log
git log 
This command is used to list the version history for the current branch.
Example:
git log --online

5. git merge
git merge [branch name] 
This command merges the specified branch’s history into the current branch.


7. Git Stage Files
To stage or simply add files, you need to use the git add command. You can stage individual files:

or all files at once:
$ git add.

8. Git Status
If you want to see what files have been created, modified, or deleted, Git status will show you a report.
$ git status

9.git commit
git commit -m “[commit message]”
This command records or snapshots the file permanently in the version history.
Example:
git commit -m “First Commit”

10. git push  - After you have committed your changes, the next is to push to a remote repository.
git push [variable name] master 
This command sends the committed changes of the master branch to your remote repository.
Example:
Push a local branch for the first time:
git push origin master
git push origin master --force
After that, then you can just use
$ git push

11. git config
This command sets the author name and email address respectively to be used with your commits.
git config –global user.the name “[name]” 
git config –global user.email “[email address]”
Example:
git config user.name "Hitendra Kuamar Verma"
git config user.email "Hitendra@Hitendra-PC"

12. git pull
git pull [Repository Link]  
This command fetches and merges changes on the remote server to your working directory.
Example:
git pull https://github.com/hverma22/Test2.git

=====================================================================================================================
5. How to Switch Branches in Git
When you create a new branch then Git automatically switches to the new branch.
If you have multiple branches, then you can easily switch between branches with git checkout:
$ git checkout master
$ git checkout develop
$ git checkout my_feature
You can get the specific previous version as well.

=====================================================================================================================

6. What is the difference between SVN & GIT?

Answer:  Below are the differences -
Git is a distributed VCS; SVN is a non-distributed VCS.
Git uses multiple repositories including a centralized repository and server, as well as some local repositories;
 SVN is a centralized version control system.
The content in Git is stored as metadata; SVN stores files of content.
Git branches are easier to work with than SVN branches.
Git does not have the global revision number feature as SVN has.
Git has better content protection than SVN.
Git was developed for the Linux kernel by Linus Torvalds; SVN was developed by CollabNet, Inc.
Git belongs to the 3rd generation of Version Control tools; SVN belongs to the 2nd generation of Version Control tools

=====================================================================================================================
7. Suppose there are 10 classes & I want to push only 5 classes, how do you do that?

Answer: Normally we commit to git, all files are going to git but in your scenario push only single file git. 
For this, you have to run specific command to push the only single file to git.

$ git commit -m "Message goes here" filename

Example to push to single file to git

$ git commit -m "Pushing Only Single file to git" config/file1.txt

Let’s take look at how to push one or two or three files to git in a single commit.

$ git commit -m "Message goes here" file1 file2 file3

For example to push three files to git

$ git commit -m "Pushing Only three files to git" config/file1.txt  config/file2.txt config/file3.txt

=====================================================================================================================

8. Mention the various Git repository hosting functions.

Answer:

Github
Gitlab
Bitbucket
SourceForge
GitEnterprise
=====================================================================================================================

9. What is the difference between git pull and git fetch?

Answer: Git pull command pulls new changes or commits from a particular branch from your central repository and updates
 your target branch in your local repository.

Git fetch is also used for the same purpose but it works in a slightly different way.
When you perform a git fetch, it pulls all new commits from the desired branch and stores it in a new branch in your local repository. If you want to reflect these changes in your target branch, git fetch must be followed with a git merge. Your target branch will only be updated after merging the target branch and fetched branch. Just to make it easy for you, remember the equation below:

Git pull = git fetch + git merge

=====================================================================================================================

10. What is the function of ‘git config’?
Answer: Git uses your username to associate commits with an identity. The git config command can be used to change your Git 
configuration, including your username.

Now explain with an example.
Suppose you want to give a username and email id to associate a commit with an identity so that you can know who has made a particular commit. For that I will use:
git config –global user. name “Your Name”: This command will add a username.
git config –global user.email “Your E-mail Address”: This command will add an email id.

=====================================================================================================================


11. what is the repository in Git
Ans : the repository is like a data structure used by VCS to store metadata for a set of files and directories. 
It contains the collection of the files as well as the history of changes made to those files. 
A repository in Git is considered your project folder.
A repository has all the project-related data. Distinct projects have distinct repositories.

=========================================================================================================================

12 What is a conflict in git
conflicts happen when people make different changes to the same line of the same file, 
or when one person edits a file and another person deletes the same file

=========================================================================================================================
13. Could u explain git workflow  :
Explain the git architecture diagram.

=========================================================================================

6 Stages of Automation Test Life Cycle
The automation test framework  mainly around the following six stages:

Determining the scope of test automation
Selecting and using the right tool for automation
Documenting test plans, test designs, and test strategies
Setting up a test environment
Automating and executing the development of the test script
Analyzing and generating test reports

-----------------
QA Analysis 
QA_ DATAProvisioning
QA_ScenarioPreperation
QA_ScenarioScriptingandexecution
QA_LeadReview
QA_SignOff
QA_CodeMergeWork
==================================================================================================================
Manual Test Engineers: Roles and Responsibilities of Manual Test Engineers
As compared to the roles and responsibilities of Automation Test Engineers, Manual Test Engineers have to do a lot more work.
 The roles and responsibilities of Manual Test Engineers include:

Requirement analysis
Creating test plans
Writing and documenting test cases
Reviewing test plans and test cases
Identifying the requirements of the test data
Testing execution
Keeping and maintaining a log of defects and follow-ups
Reporting and Summarizing test results

QA Analysis 
QA_ DATAProvisioning
QA_ScenarioPreperation
QA_ScenarioScriptingandexecution
QA_LeadReview
QA_SignOff
QA_CodeMergeWork
==================================================================================================================

How To Select Correct Test Cases For Automation Testing
Step 1:

Identify the parameters on which you will base your test case as a candidate for automation.

As of now, I am identifying the below parameters, you can have your own parameters depending on your application.

Test case executed with different sets of data.
Test case executed with different browsers.
Test case executed with different environments.
Test case executed with complex business logic
Test case executed with a different set of users
Test case involves a large amount of data
Test case has any dependency
Test case requires Special data

Step 2:

Break each application into modules. For each module, analyze and try to identify the test cases which 
should be automated based on the parameters. This list will vary for projects to projects and can also be 
enhanced to suit your needs:

Unit testing should take the top priority, followed by integration testing and functional testing.
The types of test cases that should be automated have a lot of complex manual scenarios, 
especially those that require a lot of data or environment setup.




=====================================================================================================
1. Suppose you find a bug in production. how would you make sure that the same bug is not introduced again?
ans-
Add uncaught functionality to regression test cases
If you have Automated Regression Suite, then write a new Script which validates above functionality
=====================================================================================================
2 .What do you do when your developer denies that what you filed IS A BUG?

ans -Provide Business Documentation reference to support why the existing functionality is not as per design.
Involve Product Owner / Business Analyst for Discussion.
IF Bug is not reproducible then
Provide Screenshots of the Bug, Give Timestamp on when you reproduced this so that Developer can check in Application Logs.
Provide Test Data you have used for replicating issue
=====================================================================================================
3.What has been one of your greatest challenges while doing regression testing?
 Test Data issue
Improper selection of regression test cases might skip a major regression defect to be found
=====================================================================================================
4.Difference between functional and non-functional testing?
Functional testing verifies that features/System  working  as expected  according to requirements,

Nonfunctional requirements: How Well the system does it within design & resource constraints
=====================================================================================================

Enlist some of the key challenges that are faced while performing Software Testing?
Data Issues, 
Environment Available,
Using right set of tools
=====================================================================================================
What are the drawbacks of the Agile implementation/ methodology that you faced?
Sprints are usually very deadline constrained.
Documentation is not the priority
Frequent change in requirements
=====================================================================================================
What is your approach when you have a high priority release to be delivered in a very short time?
Run Automation Suites
. Run Unit tests. 
Manual testing on high level Priority Business test cases
=====================================================================================================

What is your understanding regarding a Test plan?
test plan is a document that consists of scope, approach, resources, and outline of the testing project as 
well as the activities for tracking the progress of the project.
=====================================================================================================
Explain what will be your reaction if a project you had been working got Sudden change in its deadline?

.As a QA Engineer, Be open on your thoughts if you can deliver the project with QA Sign off covering all testcases
If Pre release is must, then discuss the oppurtunities of increasing QA Resources or possibility of partial product delivery
You have the power to hold QA Sign off if you are not satisfied with quality of product which eventually stops the release date
=====================================================================================================
What is the difference between Smoke testing and Sanity Testing?

Sanity testing is a kind of Software Testing performed after receiving a software build, 
with minor changes in code, or functionality, to ascertain that the bugs have been fixed and
 no further issues are introduced due to these changes. 

Smoke Testing is a special type of testing performed on Software build to check the critical functionalities of the program
=====================================================================================================
What are your daily activities as a member of automation tester in your office?

Running Smoke Suite on daily Basis and sending the mail to team on health of the application
Verify Defects Assigned to you  and take appropriate Actions
Working on Manual and Automation testing for the stories in Current Sprint
=====================================================================================================
How do you select regression test cases or form the regression test suite?
Include the test cases that verify core features of the application:
. Include the test cases for functionalities that have undergone recent changes: 
Include the test cases that have frequent bugs
=====================================================================================================
Have you ever managed writing the test cases without having any documents?
In one of my previous project,  we had to redevelop our internal tool with new Technology, But There are 
no testcases/Documentation for the old/existing product. As there is no documentation, Below are the steps I have followed 
Understand and exploring the existing Product to come up with Scenarios.
Spending time with Product owner or Seniors to understand the Business of the tool.
Going through production Bugs which found previously for product so that edge testcases are not missed 
in writing the tests for Upgraded product
=====================================================================================================
What is the first action you perform as a tester when application throws any weird Errors?
Open Developer tools-> Check in Console for any Java Script Errors
Open Network Tab -> And see if any request Responses are failed
Verify APplication logs to understand the actual issue
=====================================================================================================
How do you solve if there is any conflict with your peer QA on any technical aspect?
There should be argument only up to certain extent with your Peer on why you are correct
If it is still conflict,
Involve team and discuss the conflict issue with larger Audience. Open to take suggestions from your Team.
Accept any decision made from Team meeting with Smile.
=====================================================================================================
Difference between retesting and regression testing?
Retesting is done to make sure that the tests cases which failed in last execution are passed after the defects are fixed.
Regression testing is to ensure that changes have not affected unchanged part.
 Regression testing is not carried out for specific defect fixes
=====================================================================================================


In Agile Environments, in case you have any doubts regarding your project, how do you approach?
As a tester, For Domain related queries, You should reach out to Business Analyst, Product Owner




6.	How To Overcome StaleElementReferenceException in Selenium
The reference to an element is now "stale"; the element will no longer appear on the page's DOM. In simple words, when you started interacting with it, the element you located using the findElement method disappeared.

Adding exception handling to your action and, if the exception is stale, try to locate the element after a simple wait for 500 milliseconds and repeat these actions until the action or max iterations have been successful.


============================================================================================

What would you do a tester if a bug found in production.












   


 




